All the custom enumerations used throughout FFL, as well as what they mean and where to find them.

# (unlabeled enum)

* Containing file: `include/nn/ffl/types.h`

## `FFL_PATH_MAX_LEN` = 256

## `FFL_FACE_TYPE_MAX` = 12

## `FFL_FACELINE_COLOR_MAX` = 6

## `FFL_FACE_LINE_MAX` = 12,

## `FFL_FACE_MAKE_MAX` = 12,

## `FFL_HAIR_TYPE_MAX` = 132

## `FFL_HAIR_COLOR_MAX` = 8

## `FFL_HAIR_DIR_MAX` = 2

## `FFL_EYE_TYPE_DATA_MAX` = 60

## `FFL_EYE_TYPE_TRUE_MAX` = 62

## `FFL_EYE_COLOR_MAX` = 6

## `FFL_EYE_SCALE_MAX` = 8

## `FFL_EYE_SCALE_Y_MAX` = 7

## `FFL_EYE_ROTATE_MAX` = 8

## `FFL_EYE_SPACING_MAX` = 13

## `FFL_EYE_POS_MAX` = 19

## `FFL_EYEBROW_TYPE_MAX` = 24

## `FFL_EYEBROW_COLOR_MAX` = 8

## `FFL_EYEBROW_SCALE_MAX` = 9

## `FFL_EYEBROW_SCALE_Y_MAX` - 7

## `FFL_EYEBROW_ROTATE_MAX` = 12

## `FFL_EYEBROW_SPACING_MAX` = 13

## `FFL_EYEBROW_POS_MIN` = 3

## `FFL_EYEBROW_POS_MAX` = 19

## `FFL_NOSE_TYPE_MAX` = 18

## `FFL_NOSE_SCALE_MAX` = 9

## `FFL_NOSE_POS_MAX` = 19

## `FFL_MOUTH_TYPE_DATA_MAX` = 36

## `FFL_MOUTH_TYPE_TRUE_MAX` = 37

## `FFL_MOUTH_COLOR_MAX` = 5

## `FFL_MOUTH_SCALE_MAX` = 9

## `FFL_MOUTH_SCALE_Y_MAX` = 7

## `FFL_MOUTH_POS_MAX` = 19

## `FFL_MUSTACHE_TYPE_MAX` = 6

## `FFL_BEARD_TYPE_MAX` = 6

## `FFL_BEARD_COLOR_MAX` = 8

## `FFL_MUSTACHE_SCALE_MAX` = 9

## `FFL_MUSTACHE_POS_MAX` = 17

## `FFL_GLASS_TYPE_MAX` = 9

## `FFL_GLASS_COLOR_MAX` = 6

## `FFL_GLASS_SCALE_MAX` = 8

## `FFL_GLASS_POS_MAX` = 21

## `FFL_MOLE_TYPE_MAX` = 2

## `FFL_MOLE_SCALE_MAX` = 9
 
## `FFL_MOLE_POS_X_MAX` = 17

## `FFL_MOLE_POS_Y_MAX` = 31

## `FFL_FAVORITE_COLOR_MAX` = 12

## `FFLI_FACELINE_COLOR_NUM` = `FFL_FACELINE_COLOR_MAX`

## `FFLI_HAIR_COLOR_NUM` = `FFL_HAIR_COLOR_MAX`

## `FFLI_EYE_COLOR_R_NUM` = 3

## `FFLI_EYE_COLOR_B_NUM` = `FFL_EYE_COLOR_MAX`

## `FFLI_GLASS_COLOR_NUM` = `FFL_GLASS_COLOR_MAX`

## `FFLI_MOUTH_COLOR_R_NUM` = `FFL_MOUTH_COLOR_MAX`

## `FFLI_MOUTH_COLOR_G_NUM` = `FFL_MOUTH_COLOR_MAX`

## `FFLI_FAVORITE_COLOR_NUM` = `FFL_FAVORITE_COLOR_MAX`


# `FFLAge`

* Containing file: `inlcude/nn/ffl/FFLAge.h`

## `FFL_AGE_0` = 0

## `FFL_AGE_1` = 1

## `FFL_AGE_2` = 2

## `FFL_AGE_MAX` = 3

# `FFLAttributeBufferType`

* Containing file: `include/nn/ffl/FFLDrawParam.h`

## `FFL_ATTRIBUTE_BUFFER_TYPE_POSITION` = 0

## `FFL_ATTRIBUTE_BUFFER_TYPE_TEXCOORD` = 1

## `FFL_ATTRIBUTE_BUFFER_TYPE_NORMAL` = 2

## `FFL_ATTRIBUTE_BUFFER_TYPE_TANGENT` = 3

## `FFL_ATTRIBUTE_BUFFER_TYPE_COLOR` = 4

## `FFL_ATTRIBUTE_BUFFER_TYPE_MAX` = 5


# `FFLBirthPlatform`

Enumeration for which platform the Mii was originally created on. 

* Containing file: `include/nn/ffl/FFLBirthPlatform.h`
## `FFL_BIRTH_PLATFORM_WII` = 1

This Mii was made on a Nintendo Wii.

## `FFL_BIRTH_PLATFORM_NTR` = 2

This Mii was made on a Nintendo DS. 

## `FFL_BIRTH_PLATFORM_CTR` = 3

This Mii was made on a Nintendo 3DS.

## `FFL_BIRTH_PLATFORM_WII_U` = 4

This Mii was made on a Nintendo Wii U (or Nintendo Switch).

# `FFLCullMode`

* Containing file: `include/nn/ffl/FFLDrawParam.h`

## `FFL_CULL_MODE_NONE` = 0

## `FFL_CULL_MODE_BACK` = 1

## `FFL_CULL_MODE_FRONT` = 2

## `FFL_CULL_MODE_MAX` = 3


# `FFLDataSource`
This enum is for where the Mii's data is coming from on the console.

## `FFL_DATA_SOURCE_OFFICIAL` = 0

## `FFL_DATA_SOURCE_DEFAULT` = 1

## `FFL_DATA_SOURCE_MIDDLE_DB` = 2

## `FFL_DATA_SOURCE_STORE_DATA_OFFICIAL` = 3

## `FFL_DATA_SOURCE_STORE_DATA` = 4

## `FFL_DATA_SOURCE_BUFFER` = 5

# `FFLExpression`

* Containing file: `include/nn/ffl/FFLExpression.h`

## `FFL_EXPRESSION_MAX` = 19`

# `FFLFontRegion`

Enumeration for the font type used for the Mii.

* Containing file: `include/nn/ffl/FFLFontRegion.h`

## `FFL_FONT_REGION_0` = 0

## `FFL_FONT_REGION_1` = 1

## `FFL_FONT_REGION_2` = 2

## `FFL_FONT_REGION_3` = 3


# `FFLGender`
Enumeration for the gender of a Mii.
* Containing file: `/include/nn/ffl/FFLGender.h`

## `FFL_GENDER_MALE` = 0

Male

## `FFL_GENDER_FEMALE` = 1

Female

## `FFL_GENDER_MAX` = 2

Maximum values (2, one for male and one for female)

# `FFLMiddleDBType`

* Containing file: `include/nn/ffl/FFLMiddleDBType.h`

## `FFL_MIDDLE_DB_TYPE_HIDDEN_PARAM_RANDOM_UPDATE` = 0

## `FFL_MIDDLE_DB_TYPE_HIDDEN_PARAM_TIME_UPDATE_REVERSE` = 1

## `FFL_MIDDLE_DB_TYPE_HIDDEN_PARAM_TIME_UPDATE` = 2

## `FFL_MIDDLE_DB_TYPE_RANDOM_PARAM` = 3

## `FFL_MIDDLE_DB_TYPE_NET_PARAM` = 4

# `FFLModelType`

* Containing file: `include/nn/ffl/FFLModelType.h`

## `FFL_MODEL_TYPE_0` = 0

## `FFL_MODEL_TYPE_1` = 1

## `FFL_MODEL_TYPE_2` = 2

## `FFL_MODEL_TYPE_MAX` = 3

# `FFLModulateMode`

* Containing file: `include/nn/ffl/FFLModulateParam.h`

## `FFL_MODULATE_MODE_0` = 0

* No texture
* Has color (R)
* FragmentRGB = ColorR
* FragmentA = 1.0f
* Used by: ShapeBeard, ShapeNose, ShapeForehead, ShapeHair, Fill


## `FFL_MODULATE_MODE_1` = 1

* Has texture
* No Color
* FragmentRGB = TextureRGB
* FragmentA = TextureA
* Used by: FaceMake, ShapeFaceline, ShapeMask

## `FFL_MODULATE_MODE_2` = 2

* Has texture
* Has Color (R + G + B)
* FragmentRGB = ColorR * TextureR + ColorG * TextureG + ColorB * TextureB
* FragmentA = TextureA
* Used by: Mouth, Eye

## `FFL_MODULATE_MODE_3` = 3

* Has texture
* Has Color (R)
* FragmentRGB = ColorR * TextureR
* FragmentA = TextureR
* Used by: Mustache, Eyebrow, Mole, FaceLine, FaceBeard, ShapeNoseLine

## `FFL_MODULATE_MODE_4` = 4

* Has texture
* Has Color (R)
* FragmentR = COlorR * TextureG
* FragmentA = TextureR
* Used by: ShapeGlass

## `FFL_MODULATE_MODE_5` = 5

* Has texture
* Has Color (R)
* FragmentRB = ColorR * TextureR
* Used by: ShapeCap


# `FFLModulateType`

* Containing file: `include/nn/ffl/FFLModulateParam.h`

## `FFL_MODULATE_TYPE_SHAPE_FACELINE` = 0

## `FFL_MODULATE_TYPE_SHAPE_BEARD` = 1

## `FFL_MODULATE_TYPE_SHAPE_NOSE` = 2

## `FFL_MODULATE_TYPE_SHAPE_FOREHEAD` = 3

## `FFL_MODULATE_TYPE_SHAPE_HAIR` = 4

## `FFL_MODULATE_TYPE_SHAPE_CAP` = 5

## `FFL_MODULATE_TYPE_SHAPE_MASK` = 6

## `FFL_MODULATE_TYPE_SHAPE_NOSELINE` = 7

## `FFL_MODULATE_TYPE_SHAPE_GLASS` = 8

## `FFL_MODULATE_TYPE_MUSTACHE` = 9

## `FFL_MODULATE_TYPE_MOUTH` = 10

## `FFL_MODULATE_TYPE_EYEBROW` = 11

## `FFL_MODULATE_TYPE_EYE` = 12

## `FFL_MODULATE_TYPE_MOLE` = 13

## `FFL_MODULATE_TYPE_FACE_MAKE` = 14

## `FFL_MODULATE_TYPE_FACE_LINE` = 15

## `FFL_MODULATE_TYPE_FACE_BEARD` = 16

## `FFL_MODULATE_TYPE_FILL` = 17

## `FFL_MODULATE_TYPE_SHAPE_MAX` = `FFL_MODULATE_TYPE_SHAPE_GLASS` + 1

# `FFLRace`

* Containing file: `include/nn/ffl/FFLRace.h`

## `FFL_RACE_0` = 0

## `FFL_RACE_1` = 1

## `FFL_RACE_2` = 2

## `FFL_RACE_MAX` = 3

# `FFLResolution`

* Containing file: `include/nn/ffl/FFLResolution.h`

## `FFL_RESOLUTION_MASK` = 0x3fffffff

## `FFL_RESOLUTION_MIP_MAP_ENABLE_MASK` = 1 << 30

# `FFLResourceType`

* Containing file: `include/nn/ffl/FFLResourceType.h`

## `FFL_RESOURCE_TYPE_MIDDLE` = 0

## `FFL_RESOURCE_TYPE_HIGH` = 1

## `FFL_RESOURCE_TYPE_MAX` = 2

# `FFLResult`

* Containing file: `include/nn/ffl/FFLResult.h`

## `FFL_RESULT_OK` = 0

## `FFL_RESULT_ERROR` = 1

## `FFL_RESULT_HDB_EMPTY` = 2

* Unsure

## `FFL_RESULT_FILE_INVALID` = 3

## `FFL_RESULT_MANAGER_NOT_CONSTRUCT` = 4

## `FFL_RESULT_FILE_LOAD_ERROR` = 5

## `FFL_RESULT_` = 6

## `FFL_RESULT_FILE_SAVE_ERROR` = 7

## `FFL_RESULT_` = 8

## `FFL_RESULT_RES_FS_ERROR` = 9

## `FFL_RESULT_ODB_EMPTY` = 10

## `FFL_RESULT_` = 11

## `FFL_RESULT_OUT_OF_MEMORY` = 12

## `FFL_RESULT_` = 13

## `FFL_RESULT_` = 14

## `FFL_RESULT_` = 15

## `FFL_RESULT_` = 16

## `FFL_RESULT_UNKNOWN_17` = 17

## `FFL_RESULT_FS_ERROR` = 18

## `FFL_RESULT_FS_NOT_FOUND` = 19

# `FFLiCompareCharInfoFlag`

* Containing file: `include/nn/ffl/detail/FFLiCharInfo.h`

## `FFLI_COMPARE_CHAR_INFO_FLAG_PARTS` = `1 << 0`

## `FFLI_COMPARE_CHAR_INFO_FLAG_NAME` = `1 << 1`

## `FFLI_COMPARE_CHAR_INFO_FLAG_CREATOR_NAME` = `1 << 2`

## `FFLI_COMPARE_CHAR_INFO_FLAG_CREATOR_ID` = `1 << 3`

## `FFLI_COMPARE_CHAR_INFO_FLAG_GENDER` = `1 << 4`

## `FFLI_COMPARE_CHAR_INFO_FLAG_BIRTH_MONTH` = `1 << 5`

## `FFLI_COMPARE_CHAR_INFO_FLAG_BIRTH_DAY` = `1 << 6`

## `FFLI_COMPARE_CHAR_INFO_FLAG_FAVORITE_COLOR` = `1 << 7`

## `FFLI_COMPARE_CHAR_INFO_FLAG_HEIGHT` = `1 << 8`

## `FFLI_COMPARE_CHAR_INFO_FLAG_BUILD` = `1 << 9`

## `FFLI_COMPARE_CHAR_INFO_FLAG_FACELINE_COLOR` = `1 << 10`

## `FFLI_COMPARE_CHAR_INFO_FLAG_MII_VERSION` = `1 << 11`

## `FFLI_COMPARE_CHAR_INFO_FLAG_COPYABLE` = `1 << 12`

## `FFLI_COMPARE_CHAR_INFO_FLAG_NG_WORD` = `1 << 13`

## `FFLI_COMPARE_CHAR_INFO_FLAG_LOCAL_ONLY` = `1 << 14`

## `FFLI_COMPARE_CHAR_INFO_FLAG_REGION_MOVE` = `1 << 15`

## `FFLI_COMPARE_CHAR_INFO_FLAG_FONT_REGION` = `1 << 16`

## `FFLI_COMPARE_CHAR_INFO_FLAG_BIRTH_PLATFORM` = `1 << 	17`

# `FFLiEyeTextureType`

* Containing file: `include/nn/ffl/FFLiPartsTextures.h`

## `FFLI_EYE_TEXTURE_TYPE_0` = 0

## `FFLI_EYE_TEXTURE_TYPE_1` = 1

## `FFLI_EYE_TEXTURE_TYPE_2` = 2

## `FFLI_EYE_TEXTURE_TYPE_3` = 3

## `FFLI_EYE_TEXTURE_TYPE_4` = 4

## `FFLI_EYE_TEXTURE_TYPE_5` = 5

## `FFLI_EYE_TEXTURE_TYPE_MAX` = 6

# `FFLiMouthTextureType`

* Containing file: `include/nn/ffl/FFLiPartsTextures.h`

## `FFLI_MOUTH_TEXTURE_TYPE_0` = 0

## `FFLI_MOUTH_TEXTURE_TYPE_1` = 1

## `FFLI_MOUTH_TEXTURE_TYPE_2` = 2

## `FFLI_MOUTH_TEXTURE_TYPE_3` = 3

## `FFLI_MOUTH_TEXTURE_TYPE_4` = 4

## `FFLI_MOUTH_TEXTURE_TYPE_MAX` = 5

# `FFLiOriginPosition`

* Containing file: `include/nn/ffl/FFLiRawMaskParts.h`

## `FFLI_ORIGIN_POSITION_CENTER` = 0

## `FFLI_ORIGIN_POSITION_RIGHT` = 1

## `FFLI_ORIGIN_POSITION_LEFT` = 2


# `FFLiResourceCompressLevel`

* Containing file: `include/nn/ffl/detail/FFLiResourcePartsInfo.h`

## `FFLI_RESOURCE_COMPRESS_LEVEL_NO_COMPRESSION` = 0

## `FFLI_RESOURCE_COMPRESS_LEVEL_BEST_SPEED` = 1

## `FFLI_RESOURCE_COMPRESS_LEVEL_BEST_COMPRESSION` = 9

## `FFLI_RESOURCE_COMPRESS_LEVEL_DEFAULT_COMPRESSION` = 10

## `FFLI_RESOURCE_COMPRESS_LEVEL_MAX` = 11

# `FFLiResourceMemoryLevel`

* Containing file: `include/nn/ffl/detail/FFLiResourcePartsInfo.h`

## `FFLI_RESOURCE_MEMORY_LEVEL_1` = 0

## `FFLI_RESOURCE_MEMORY_LEVEL_2` = 1

## `FFLI_RESOURCE_MEMORY_LEVEL_3` = 2

## `FFLI_RESOURCE_MEMORY_LEVEL_4` = 3

## `FFLI_RESOURCE_MEMORY_LEVEL_5` = 4

## `FFLI_RESOURCE_MEMORY_LEVEL_6` = 5

## `FFLI_RESOURCE_MEMORY_LEVEL_7` = 6

## `FFLI_RESOURCE_MEMORY_LEVEL_8` = 7

## `FFLI_RESOURCE_MEMORY_LEVEL_9` = 8

## `FFLI_RESOURCE_MEMORY_LEVEL_MAX` = 9

# `FFLiResourceShapeElementType`

* Containing file: `include/nn/ffl/detail/FFLiResourceShape.h`

## `FFLI_RESOURCE_SHAPE_ELEMENT_TYPE_POSITION` = 0

## `FFLI_RESOURCE_SHAPE_ELEMENT_TYPE_NORMAL` = 1

## `FFLI_RESOURCE_SHAPE_ELEMENT_TYPE_TEXCOORD` = 2

## `FFLI_RESOURCE_SHAPE_ELEMENT_TYPE_TANGENT` = 3

## `FFLI_RESOURCE_SHAPE_ELEMENT_TYPE_COLOR` = 4

## `FFLI_RESOURCE_SHAPE_ELEMENT_TYPE_INDEX` = 5

## `FFLI_RESOURCE_SHAPE_ELEMENT_TYPE_TRANSFORM_HAIR_1` = 6

## `FFLI_RESOURCE_SHAPE_ELEMENT_TYPE_TRANSFORM_FACELINE` = 7

## `FFLI_RESOURCE_SHAPE_ELEMENT_TYPE_BOUNDING_BOX` = 8

## `FFLI_RESOURCE_SHAPE_ELEMENT_TYPE_BUFFER_MAX` = `FFLI_RESOURCE_SHAPE_ELEMENT_TYPE_INDEX` + 1

# `FFLiResourceStrategy`

* Containing file: `include/nn/ffl/detail/FFLiResourcePartsInfo.h`

## `FFLI_RESOURCE_STRATEGY_DEFAULT_STRATEGY` = 0

## `FFLI_RESOURCE_STRATEGY_FILTERED` = 1

## `FFLI_RESOURCE_STRATEGY_HUFFMAN_ONLY` = 2

## `FFLI_RESOURCE_STRATEGY_RLE` = 3

## `FFLI_RESOURCE_STRATEGY_FIXED` = 4

## `FFLI_RESOURCE_STRATEGY_UNCOMPRESSED` = 5

## `FFLI_RESOURCE_STRATEGY_MAX` = 6

# `FFLiResourceWindowBits`

## `FFLI_RESOURCE_WINDOW_BITS_ZLIB_8` = 0

* Window size = 0x0100 (256 B)
 
## FFLI_RESOURCE_WINDOW_BITS_ZLIB_9 = 1

* Window size = 0x0200 (512 B)
 
## FFLI_RESOURCE_WINDOW_BITS_ZLIB_10 = 2

* Window size = 0x0400 (1 KB)
 
## FFLI_RESOURCE_WINDOW_BITS_ZLIB_11 = 3

* Window size = 0x0800 (2 KB)

## FFLI_RESOURCE_WINDOW_BITS_ZLIB_12   = 4

* Window size = 0x1000 (4 KB)

## FFLI_RESOURCE_WINDOW_BITS_ZLIB_13   = 5

* Window size = 0x2000 (8 KB)

## FFLI_RESOURCE_WINDOW_BITS_ZLIB_14   = 6

* Window size = 0x4000 (16 KB)

## FFLI_RESOURCE_WINDOW_BITS_ZLIB_15   = 7

* Window size = 0x8000 (32 KB)

## FFLI_RESOURCE_WINDOW_BITS_GZIP_8 = 8   // Window size = 0x0100 (256 B)
## FFLI_RESOURCE_WINDOW_BITS_GZIP_9 = 9   // Window size = 0x0200 (512 B)
## FFLI_RESOURCE_WINDOW_BITS_GZIP_10 = 10  // Window size = 0x0400 (1 KB)
## FFLI_RESOURCE_WINDOW_BITS_GZIP_11 = 11   // 

* Window size = 0x0800 (2 KB)

## FFLI_RESOURCE_WINDOW_BITS_GZIP_12 = 12

* Window size = 0x1000 (4 KB)

## FFLI_RESOURCE_WINDOW_BITS_GZIP_13 = 13

* Window size = 0x2000 (8 KB)

## `FFLI_RESOURCE_WINDOW_BITS_GZIP_14` = 14

* Window size = 0x4000 (16 KB)

## `FFLI_RESOURCE_WINDOW_BITS_GZIP_15` = 15

* Window size = 0x8000 (32 KB)

## `FFLI_RESOURCE_WINDOW_BITS_ZLIB_OR_GZIP_15` = 16
* Window size = 0x8000 (32 KB)

## `FFLI_RESOURCE_WINDOW_BITS_MAX` = 17

* Equivalent to FFLI_RESOURCE_WINDOW_BITS_ZLIB_15, although most likely unintentional

# `FFLiShapePartsType`

* Containing file: `include/nn/ffl/FFLiShapePartsType.h`

## `FFLI_SHAPE_PARTS_TYPE_BEARD` = 0

## `FFLI_SHAPE_PARTS_TYPE_CAP_1` = 1

## `FFLI_SHAPE_PARTS_TYPE_CAP_2` = 2

## `FFLI_SHAPE_PARTS_TYPE_FACELINE` = 3

## `FFLI_SHAPE_PARTS_TYPE_GLASS` = 4

## `FFLI_SHAPE_PARTS_TYPE_MASK` = 5

## `FFLI_SHAPE_PARTS_TYPE_NOSELINE` = 6

## `FFLI_SHAPE_PARTS_TYPE_NOSE` = 7

## `FFLI_SHAPE_PARTS_TYPE_HAIR_1` = 8

## `FFLI_SHAPE_PARTS_TYPE_HAIR_2` = 9

## `FFLI_SHAPE_PARTS_TYPE_FOREHEAD_1` = 10

## `FFLI_SHAPE_PARTS_TYPE_FOREHEAD_2` = 11

## `FFLI_SHAPE_PARTS_TYPE_MAX` = 12

# `FFLiShapeType`

* Containing file: `include/nn/ffl/FFLiShapeType.h`

## `FFLI_SHAPE_TYPE_OPA_BEARD` = 0

## `FFLI_SHAPE_TYPE_OPA_FACELINE` = 1

## `FFLI_SHAPE_TYPE_OPA_HAIR_1` = 2

## `FFLI_SHAPE_TYPE_OPA_FOREHEAD_1` = 3

## `FFLI_SHAPE_TYPE_XLU_MASK` = 4

## `FFLI_SHAPE_TYPE_XLU_NOSELINE` = 5

## `FFLI_SHAPE_TYPE_OPA_NOSE` = 6

## `FFLI_SHAPE_TYPE_OPA_CAP_1` = 7

## `FFLI_SHAPE_TYPE_XLU_GLASS` = 8

## `FFLI_SHAPE_TYPE_OPA_HAIR_2` = 9

## `FFLI_SHAPE_TYPE_OPA_FOREHEAD_2` = 10

## `FFLI_SHAPE_TYPE_OPA_CAP_2` = 11

## `FFLI_SHAPE_TYPE_MAX` = 12

# `FFLiSwapEndianType`

* Containing file: `include/nn/ffl/FFLiSwapEndian.h`

## `FFLI_SWAP_ENDIAN_TYPE_U8` = 0

## `FFLI_SWAP_ENDIAN_TYPE_U16` = 1

## `FFLI_SWAP_ENDIAN_TYPE_U32` = 2

# `FFLiTextureFormat`

* Containing file: `include/nn/ffl/detail/FFLiResourceTexture.h`

## `FFLI_TEXTURE_FORMAT_R8` = 0

## `FFLI_TEXTURE_FORMAT_RG8` = 0

## `FFLI_TEXTURE_FORMAT_RGBA8` = 2

# `FFLiTexturePartsType`

* Containing file: `include/nn/ffl/FFLiTexturePartsType.h`

## `FFLI_TEXTURE_PARTS_TYPE_BEARD` = 0

## `FFLI_TEXTURE_PARTS_TYPE_CAP` = 1

## `FFLI_TEXTURE_PARTS_TYPE_EYE` = 2

## `FFLI_TEXTURE_PARTS_TYPE_EYEBROW` = 3

## `FFLI_TEXTURE_PARTS_TYPE_FACELINE` = 4

## `FFLI_TEXTURE_PARTS_TYPE_FACE_MAKEUP` = 5

## `FFLI_TEXTURE_PARTS_TYPE_GLASS` = 6

## `FFLI_TEXTURE_PARTS_TYPE_MOLE` = 7

## `FFLI_TEXTURE_PARTS_TYPE_MOUTH` = 8

## `FFLI_TEXTURE_PARTS_TYPE_MUSTACHE` = 9

## `FFLI_TEXTURE_PARTS_TYPE_NOSELINE` = 10

## `FFLI_TEXTURE_PARTS_TYPE_MAX` = 11


# `FFLiVerifyCharInfoReason`
Error enumerations for if there is an issue with Mii data. 

* Containing file: `include/nn/ffl/detail/FFLiCharInfo.h`

## `FFLI_VERIFY_CHAR_INFO_REASON_OK` = 0

## `FFLI_VERIFY_CHAR_INFO_REASON_FACE_TYPE_INVALID` = 1

## `FFLI_VERIFY_CHAR_INFO_REASON_FACELINE_COLOR_INVALID`     = 2

## `FFLI_VERIFY_CHAR_INFO_REASON_FACE_LINE_INVALID` = 3

## `FFLI_VERIFY_CHAR_INFO_REASON_FACE_MAKE_INVALID` = 4

## `FFLI_VERIFY_CHAR_INFO_REASON_HAIR_TYPE_INVALID` = 5

## `FFLI_VERIFY_CHAR_INFO_REASON_HAIR_COLOR_INVALID` = 6

## `FFLI_VERIFY_CHAR_INFO_REASON_HAIR_DIR_INVALID` = 7

## `FFLI_VERIFY_CHAR_INFO_REASON_EYE_TYPE_INVALID` = 8

## `FFLI_VERIFY_CHAR_INFO_REASON_EYE_COLOR_INVALID` = 9

## `FFLI_VERIFY_CHAR_INFO_REASON_EYE_SCALE_INVALID` = 10

## `FFLI_VERIFY_CHAR_INFO_REASON_EYE_SCALE_Y_INVALID` = 11

## `FFLI_VERIFY_CHAR_INFO_REASON_EYE_ROTATE_INVALID` = 12

## `FFLI_VERIFY_CHAR_INFO_REASON_EYE_SPACING_INVALID` = 13

## `FFLI_VERIFY_CHAR_INFO_REASON_EYE_POS_INVALID` = 14

## `FFLI_VERIFY_CHAR_INFO_REASON_EYEBROW_TYPE_INVALID` = 15

## `FFLI_VERIFY_CHAR_INFO_REASON_EYEBROW_COLOR_INVALID` = 16

## `FFLI_VERIFY_CHAR_INFO_REASON_EYEBROW_SCALE_INVALID` = 17

## `FFLI_VERIFY_CHAR_INFO_REASON_EYEBROW_SCALE_Y_INVALID` = 18

## `FFLI_VERIFY_CHAR_INFO_REASON_EYEBROW_ROTATE_INVALID` = 19

## FFLI_VERIFY_CHAR_INFO_REASON_EYEBROW_SPACING_INVALID = 20

## `FFLI_VERIFY_CHAR_INFO_REASON_EYEBROW_POS_INVALID` = 21

## `FFLI_VERIFY_CHAR_INFO_REASON_NOSE_TYPE_INVALID` = 22

## `FFLI_VERIFY_CHAR_INFO_REASON_NOSE_SCALE_INVALID` = 23

## `FFLI_VERIFY_CHAR_INFO_REASON_NOSE_POS_INVALID` = 24

## `FFLI_VERIFY_CHAR_INFO_REASON_MOUTH_TYPE_INVALID` = 25

## `FFLI_VERIFY_CHAR_INFO_REASON_MOUTH_COLOR_INVALID` = 26

## `FFLI_VERIFY_CHAR_INFO_REASON_MOUTH_SCALE_INVALID` = 27

## `FFLI_VERIFY_CHAR_INFO_REASON_MOUTH_SCALE_Y_INVALID` = 28

## `FFLI_VERIFY_CHAR_INFO_REASON_MOUTH_POS_INVALID` = 29

## `FFLI_VERIFY_CHAR_INFO_REASON_BEARD_TYPE_INVALID` = 30

## `FFLI_VERIFY_CHAR_INFO_REASON_BEARD_COLOR_INVALID` = 31

## `FFLI_VERIFY_CHAR_INFO_REASON_MUSTACHE_TYPE_INVALID` = 32

## `FFLI_VERIFY_CHAR_INFO_REASON_MUSTACHE_SCALE_INVALID` = 33

## `FFLI_VERIFY_CHAR_INFO_REASON_MUSTACHE_POS_INVALID` = 34

## `FFLI_VERIFY_CHAR_INFO_REASON_GLASS_TYPE_INVALID` = 35

## `FFLI_VERIFY_CHAR_INFO_REASON_GLASS_COLOR_INVALID` = 36

## `FFLI_VERIFY_CHAR_INFO_REASON_GLASS_SCALE_INVALID` = 37

## `FFLI_VERIFY_CHAR_INFO_REASON_GLASS_POS_INVALID` = 38

## `FFLI_VERIFY_CHAR_INFO_REASON_MOLE_TYPE_INVALID` = 39

## `FFLI_VERIFY_CHAR_INFO_REASON_MOLE_SCALE_INVALID` = 40

## `FFLI_VERIFY_CHAR_INFO_REASON_MOLE_POS_X_INVALID` = 41

## `FFLI_VERIFY_CHAR_INFO_REASON_MOLE_POS_Y_INVALID` = 42

## `FFLI_VERIFY_CHAR_INFO_REASON_HEIGHT_INVALID` = 43

## `FFLI_VERIFY_CHAR_INFO_REASON_BUILD_INVALID` = 44

## `FFLI_VERIFY_CHAR_INFO_REASON_NAME_INVALID` = 45

## `FFLI_VERIFY_CHAR_INFO_REASON_CREATOR_NAME_INVALID` = 46

## `FFLI_VERIFY_CHAR_INFO_REASON_GENDER_INVALID` = 47

## `FFLI_VERIFY_CHAR_INFO_REASON_BIRTHDAY_INVALID` = 48

## `FFLI_VERIFY_CHAR_INFO_REASON_FAVORITE_COLOR_INVALID` = 49

## `FFLI_VERIFY_CHAR_INFO_REASON_REGION_MOVE_INVALID` = 50

## `FFLI_VERIFY_CHAR_INFO_REASON_FONT_REGION_INVALID` = 51

## `FFLI_VERIFY_CHAR_INFO_REASON_PAGE_INDEX_INVALID` = 52

## `FFLI_VERIFY_CHAR_INFO_REASON_SLOT_INDEX_INVALID` = 53

## `FFLI_VERIFY_CHAR_INFO_REASON_BIRTH_PLATFORM_INVALID` = 54

## `FFLI_VERIFY_CHAR_INFO_REASON_CREATOR_ID_INVALID` = 55

